// <auto-generated />
using System;
using CMS_Backend.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CMS_Backend.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CMS_Backend.Models.College", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("colleges");
                });

            modelBuilder.Entity("CMS_Backend.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("collegeId")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("role_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("collegeId");

                    b.HasIndex("role_id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("CMS_Backend.Models.UserRoles", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("CollegeId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("CollegeId");

                    b.ToTable("user_roles");
                });

            modelBuilder.Entity("CMS_Backend.Models.User", b =>
                {
                    b.HasOne("CMS_Backend.Models.College", "College")
                        .WithMany()
                        .HasForeignKey("collegeId");

                    b.HasOne("CMS_Backend.Models.UserRoles", "user_roles")
                        .WithMany()
                        .HasForeignKey("role_id");

                    b.Navigation("College");

                    b.Navigation("user_roles");
                });

            modelBuilder.Entity("CMS_Backend.Models.UserRoles", b =>
                {
                    b.HasOne("CMS_Backend.Models.College", "College")
                        .WithMany()
                        .HasForeignKey("CollegeId");

                    b.Navigation("College");
                });
#pragma warning restore 612, 618
        }
    }
}
